In this file, we will describe the different types of test cases that our program underwent.

Server
We tested the multithreading and made sure our code had no race conditions by sending multiple client requests to the server at the same time. We tested sending multiple requests to the same project and watched the output to make sure that they were handled correctly for the current state of the project. In order to test that the mutexes were being implemented properly, we temporarily put an 10 second sleep() in parts of the code where a lock was supposed to have just happened. Then we used a different client to see if the client would wait until the mutex was resolved. As expected the client had to wait until the thread resolving the other client unlocked the respective mutex. This was repeated for table locks, project locks, and access counter locks as described in the README.pdf. We also ensured that the memory was properly cleaned up and threads were properly shutdown when a SIGINT signal is sent to the server.

Configure


Checkout


Update


Upgrade


Commit


Push


Create


Destroy


Add


Remove


CurrentVersion


History


Rollback
